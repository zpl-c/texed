name: Deploy on itch.io

on:
  workflow_dispatch

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -qq
        sudo apt-get install gcc-multilib
        sudo apt-get install -y --no-install-recommends libglfw3 libglfw3-dev libx11-dev libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libxext-dev libxfixes-dev ninja-build

    - name: Set up Visual Studio shell
      if: runner.os == 'Windows'
      uses: egor-tensin/vs-shell@v2

    - name: Configure CMake
      run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build texed
      run: cmake --build build

    - name: Package
      shell: bash
      run: |
        mkdir deploy
        cp -r art deploy/
        cp build/texed* deploy/
        echo $(cat code/app/texed.c | sed -nr "s/.*TEXED_VERSION\s*\"(.*)\".*/\1/p") > deploy/VERSION
        
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: deploy_${{ matrix.os }}
        path: deploy
  push:
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        id: download
        uses: actions/download-artifact@v2
        with:
          name: deploy_${{ matrix.os }}
          path: deploy
      - name: 'Echo download path'
        run: echo ${{steps.download.outputs.download-path}}
      - name: Push win64
        uses: zaklaus/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
          CHANNEL: ${{ matrix.os }}
          ITCH_GAME: texed
          ITCH_USER: zaklaus
          PACKAGE: deploy
          VERSION_FILE: deploy/VERSION
